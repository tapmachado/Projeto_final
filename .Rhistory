if (nrow(grupos_com_mais_de_um) == 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: apenas 1 valor por grupo (isolado + substrato).\n")
anova_result <- data.frame()
tukey <- NULL
} else if (nrow(variancia_zero) > 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: vari√¢ncia nula em um ou mais grupos.\n")
anova_result <- data.frame()
tukey <- NULL
} else {
modelo <- suppressWarnings(aov(atividade ~ isolado * substrato, data = subdados))
anova_result <- summary(modelo)[[1]]
pvals <- anova_result[["Pr(>F)"]][1:3]
if (any(pvals < 0.05)) {
cat("üìà ANOVA: diferen√ßas significativas detectadas.\n")
tukey <- TukeyHSD(modelo)
} else {
cat("‚ûñ ANOVA: sem diferen√ßas significativas detectadas.\n")
tukey <- NULL
}
}
# Nome completo da enzima
nome_completo <- nomes_enzimas[[tolower(enz)]]
if (is.null(nome_completo)) nome_completo <- enz
# Gr√°fico: barras horizontais empilhadas
grafico <- subdados %>%
group_by(isolado, substrato) %>%
summarise(
media = mean(atividade, na.rm = TRUE),
.groups = "drop"
) %>%
ggplot(aes(x = media, y = forcats::fct_rev(isolado), fill = substrato)) +
geom_col() +
labs(
title = paste("Atividade da enzima:", nome_completo),
x = "M√©dia da atividade",
y = "Isolado",
fill = "Substrato"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "right"
)
print(grafico)
# Exportar resultados
write_csv(desc, file.path("resultados_todas_enzimas", paste0("desc_", enz, ".csv")))
write_csv(normalidade, file.path("resultados_todas_enzimas", paste0("normalidade_", enz, ".csv")))
write_csv(levene, file.path("resultados_todas_enzimas", paste0("levene_", enz, ".csv")))
if (nrow(anova_result) > 0) {
write_csv(as.data.frame(anova_result), file.path("resultados_todas_enzimas", paste0("anova_", enz, ".csv")))
}
if (!is.null(tukey)) {
for (fator in names(tukey)) {
tukey_df <- as.data.frame(tukey[[fator]])
tukey_df$Compara√ß√£o <- rownames(tukey_df)
write_csv(tukey_df, file.path("resultados_todas_enzimas", paste0("tukey_", enz, "_", fator, ".csv")))
}
}
# Salvar gr√°fico
ggsave(
filename = file.path("resultados_todas_enzimas", paste0("grafico_", enz, ".png")),
plot = grafico,
width = 10, height = 6
)
cat("‚úîÔ∏è Exporta√ß√µes completas para:", nome_completo, "\n")
Sys.sleep(1)
}
melhores_isolados <- dados %>%
group_by(enzima, isolado) %>%
summarise(media_atividade = mean(atividade, na.rm = TRUE), .groups = "drop") %>%
arrange(enzima, desc(media_atividade)) %>%
group_by(enzima) %>%
slice_head(n = 3)
knitr::kable(melhores_isolados, caption = "Top 3 isolados com maior m√©dia de atividade por enzima (sem considerar substrato)", digits = 2)
## üèÜ Melhores Isolados por Enzima
```{r melhores-isolados, echo=FALSE}
## üèÜ Melhores Isolados por Enzima
melhores_isolados <- dados %>%
group_by(enzima, isolado) %>%
summarise(
media_atividade = mean(atividade, na.rm = TRUE),
dp = sd(atividade, na.rm = TRUE),
.groups = "drop"
) %>%
arrange(enzima, desc(media_atividade)) %>%
group_by(enzima) %>%
slice_head(n = 3) %>%
mutate(ranking = paste0(1:3, "¬∫"))
# Exibir tabela formatada
melhores_isolados %>%
select(ranking, enzima, isolado, media_atividade, dp) %>%
rename(
"Ranking" = ranking,
"Enzima" = enzima,
"Isolado" = isolado,
"M√©dia de Atividade" = media_atividade,
"Desvio Padr√£o" = dp
) %>%
knitr::kable(
caption = "Top 3 isolados com maior atividade enzim√°tica m√©dia",
digits = 2,
align = c("l", "l", "l", "c", "c")
) %>%
kableExtra::kable_styling(
bootstrap_options = c("striped", "hover"),
full_width = FALSE
)
install.packages("kableExtra")
## üèÜ Melhores Isolados por Enzima
melhores_isolados <- dados %>%
group_by(enzima, isolado) %>%
summarise(
media_atividade = mean(atividade, na.rm = TRUE),
dp = sd(atividade, na.rm = TRUE),
.groups = "drop"
) %>%
arrange(enzima, desc(media_atividade)) %>%
group_by(enzima) %>%
slice_head(n = 3) %>%
mutate(ranking = paste0(1:3, "¬∫"))
# Exibir tabela formatada
melhores_isolados %>%
select(ranking, enzima, isolado, media_atividade, dp) %>%
rename(
"Ranking" = ranking,
"Enzima" = enzima,
"Isolado" = isolado,
"M√©dia de Atividade" = media_atividade,
"Desvio Padr√£o" = dp
) %>%
knitr::kable(
caption = "Top 3 isolados com maior atividade enzim√°tica m√©dia",
digits = 2,
align = c("l", "l", "l", "c", "c")
) %>%
kableExtra::kable_styling(
bootstrap_options = c("striped", "hover"),
full_width = FALSE
)
## üèÜ Melhores Isolados por Enzima
melhores_isolados %>%
select(ranking, enzima, isolado, media_atividade, dp) %>%
rename(
"Ranking" = ranking,
"Enzima" = enzima,
"Isolado" = isolado,
"M√©dia" = media_atividade,
"DP" = dp
) %>%
knitr::kable(
caption = "Top 3 isolados com maior atividade enzim√°tica m√©dia",
digits = 2,
align = c("l", "l", "l", "c", "c")
)
## üèÜ Melhores Isolados por Enzima
```{r melhores-isolados}
## üèÜ Melhores Isolados por Enzima
library(dplyr)      # Para manipula√ß√£o de dados
library(knitr)      # Para tabelas formatadas
# Calcular os melhores isolados
melhores_isolados <- dados %>%
group_by(enzima, isolado) %>%
summarise(
media_atividade = mean(atividade, na.rm = TRUE),
dp = sd(atividade, na.rm = TRUE),
.groups = "drop"
) %>%
arrange(enzima, desc(media_atividade)) %>%
group_by(enzima) %>%
slice_head(n = 3) %>%
mutate(ranking = paste0(1:3, "¬∫"))
# Criar tabela formatada
tabela_resultados <- melhores_isolados %>%
select(ranking, enzima, isolado, media_atividade, dp) %>%
rename(
"Ranking" = ranking,
"Enzima" = enzima,
"Isolado" = isolado,
"M√©dia" = media_atividade,
"DP" = dp
)
# Exibir tabela
knitr::kable(
tabela_resultados,
caption = "Top 3 isolados com maior atividade enzim√°tica m√©dia",
digits = 2,
align = c("l", "l", "l", "c", "c")
)
load("estatisticas_base.RData")
# Criar pasta de resultados
dir.create("resultados_todas_enzimas", showWarnings = FALSE)
# Dicion√°rio de nomes completos das enzimas
nomes_enzimas <- c(
bgli = "Œ≤-glicosidase",
xil = "Xilanase",
endog = "Endoglucanase",
lac = "Lacase",
fpa = "FPase",
bxil = "Œ≤-xilosidase",
mangper = "Mangan√™s Peroxidase"
)
for (enz in enzimas) {
cat("\n===========================================\n")
cat("üî¨ Enzima:", enz, "\n")
subdados <- dados %>%
filter(enzima == enz) %>%
filter(!is.na(atividade), !is.nan(atividade), !is.infinite(atividade))
if (nlevels(droplevels(subdados$isolado)) < 2 |
nlevels(droplevels(subdados$substrato)) < 2) {
cat("‚ö†Ô∏è Pulado: 'isolado' ou 'substrato' com apenas um n√≠vel.\n")
next
}
desc <- subdados %>%
group_by(isolado, substrato) %>%
summarise(
n = n(),
media = mean(atividade, na.rm = TRUE),
desvio = sd(atividade, na.rm = TRUE),
mediana = median(atividade, na.rm = TRUE),
.groups = "drop"
)
normalidade <- subdados %>%
group_by(isolado, substrato) %>%
filter(n() >= 5) %>%
summarise(ad_p = tryCatch(nortest::ad.test(atividade)$p.value, error = function(e) NA_real_),
.groups = "drop")
levene <- levene_test(subdados, atividade ~ isolado * substrato)
cat("üìä Levene p =", formatC(levene$p, digits = 3), ifelse(levene$p < 0.05, "‚Üí vari√¢ncias diferentes ‚ö†Ô∏è", "‚Üí vari√¢ncias homog√™neas ‚úîÔ∏è"), "\n")
grupos_com_mais_de_um <- subdados %>%
group_by(isolado, substrato) %>%
summarise(n = n(), .groups = "drop") %>%
filter(n > 1)
variancia_zero <- subdados %>%
group_by(isolado, substrato) %>%
summarise(sd = sd(atividade, na.rm = TRUE), .groups = "drop") %>%
filter(sd == 0 | is.na(sd))
if (nrow(grupos_com_mais_de_um) == 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: apenas 1 valor por grupo.\n")
anova_result <- data.frame()
tukey <- NULL
} else if (nrow(variancia_zero) > 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: vari√¢ncia nula.\n")
anova_result <- data.frame()
tukey <- NULL
} else {
modelo <- suppressWarnings(aov(atividade ~ isolado * substrato, data = subdados))
anova_result <- summary(modelo)[[1]]
pvals <- anova_result[["Pr(>F)"]][1:3]
if (any(pvals < 0.05)) {
cat("üìà ANOVA: diferen√ßas significativas detectadas.\n")
tukey <- TukeyHSD(modelo)
} else {
cat("‚ûñ ANOVA: sem diferen√ßas significativas.\n")
tukey <- NULL
}
}
nome_completo <- nomes_enzimas[[tolower(enz)]]
if (is.null(nome_completo)) nome_completo <- enz
grafico <- subdados %>%
group_by(isolado, substrato) %>%
summarise(media = mean(atividade, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = media, y = forcats::fct_rev(isolado), fill = substrato)) +
geom_col() +
labs(
title = paste("Atividade da enzima:", nome_completo),
x = "M√©dia da atividade",
y = "Isolado",
fill = "Substrato"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(grafico)
write_csv(desc, file.path("resultados_todas_enzimas", paste0("desc_", enz, ".csv")))
write_csv(normalidade, file.path("resultados_todas_enzimas", paste0("normalidade_", enz, ".csv")))
write_csv(levene, file.path("resultados_todas_enzimas", paste0("levene_", enz, ".csv")))
if (nrow(anova_result) > 0) {
write_csv(as.data.frame(anova_result), file.path("resultados_todas_enzimas", paste0("anova_", enz, ".csv")))
}
if (!is.null(tukey)) {
for (fator in names(tukey)) {
tukey_df <- as.data.frame(tukey[[fator]])
tukey_df$Compara√ß√£o <- rownames(tukey_df)
write_csv(tukey_df, file.path("resultados_todas_enzimas", paste0("tukey_", enz, "_", fator, ".csv")))
}
}
ggsave(
filename = file.path("resultados_todas_enzimas", paste0("grafico_", enz, ".png")),
plot = grafico, width = 10, height = 6
)
cat("‚úîÔ∏è Exporta√ß√µes completas para:", nome_completo, "\n")
Sys.sleep(1)
}
# Criar pasta de resultados
dir.create("resultados_todas_enzimas", showWarnings = FALSE)
# Dicion√°rio de nomes completos das enzimas
nomes_enzimas <- c(
bgli = "Œ≤-glicosidase",
xil = "Xilanase",
endog = "Endoglucanase",
lac = "Lacase",
fpa = "FPase",
bxil = "Œ≤-xilosidase",
mangper = "Mangan√™s Peroxidase"
)
# Loop por enzima
for (enz in enzimas) {
cat("\n===========================================\n")
cat("üî¨ Enzima:", enz, "\n")
subdados <- dados %>%
filter(enzima == enz) %>%
filter(!is.na(atividade), !is.nan(atividade), !is.infinite(atividade))
if (nlevels(droplevels(subdados$isolado)) < 2 |
nlevels(droplevels(subdados$substrato)) < 2) {
cat("‚ö†Ô∏è Pulado: 'isolado' ou 'substrato' com apenas um n√≠vel.\n")
next
}
# Estat√≠stica descritiva
desc <- subdados %>%
group_by(isolado, substrato) %>%
summarise(
n = n(),
media = mean(atividade, na.rm = TRUE),
desvio = sd(atividade, na.rm = TRUE),
mediana = median(atividade, na.rm = TRUE),
.groups = "drop"
)
# Teste de normalidade (A-D)
normalidade <- subdados %>%
group_by(isolado, substrato) %>%
filter(n() >= 5) %>%
summarise(ad_p = tryCatch(nortest::ad.test(atividade)$p.value, error = function(e) NA_real_),
.groups = "drop")
cat("üß™ Grupos com n‚â•5 testados para normalidade:", nrow(normalidade), "\n")
# Teste de Levene
levene <- levene_test(subdados, atividade ~ isolado * substrato)
cat("üìä Levene p =", formatC(levene$p, digits = 3), ifelse(levene$p < 0.05, "‚Üí vari√¢ncias diferentes ‚ö†Ô∏è", "‚Üí vari√¢ncias homog√™neas ‚úîÔ∏è"), "\n")
# Verifica√ß√£o de dados antes da ANOVA
grupos_com_mais_de_um <- subdados %>%
group_by(isolado, substrato) %>%
summarise(n = n(), .groups = "drop") %>%
filter(n > 1)
variancia_zero <- subdados %>%
group_by(isolado, substrato) %>%
summarise(sd = sd(atividade, na.rm = TRUE), .groups = "drop") %>%
filter(sd == 0 | is.na(sd))
if (nrow(grupos_com_mais_de_um) == 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: apenas 1 valor por grupo (isolado + substrato).\n")
anova_result <- data.frame()
tukey <- NULL
} else if (nrow(variancia_zero) > 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: vari√¢ncia nula em um ou mais grupos.\n")
anova_result <- data.frame()
tukey <- NULL
} else {
modelo <- suppressWarnings(aov(atividade ~ isolado * substrato, data = subdados))
anova_result <- summary(modelo)[[1]]
pvals <- anova_result[["Pr(>F)"]][1:3]
if (any(pvals < 0.05)) {
cat("üìà ANOVA: diferen√ßas significativas detectadas.\n")
tukey <- TukeyHSD(modelo)
} else {
cat("‚ûñ ANOVA: sem diferen√ßas significativas detectadas.\n")
tukey <- NULL
}
}
# Loop por enzima para gerar os gr√°ficos
for (enz in enzimas) {
subdados <- dados %>%
filter(enzima == enz) %>%
filter(!is.na(atividade), !is.nan(atividade), !is.infinite(atividade))
if (nrow(subdados) == 0) {
cat("üîí Sem dados dispon√≠veis para:", enz, "\n\n")
next
}
nome_completo <- nomes_enzimas[[tolower(enz)]]
if (is.null(nome_completo)) nome_completo <- enz
grafico <- subdados %>%
group_by(isolado, substrato) %>%
summarise(media = mean(atividade, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = media, y = forcats::fct_rev(isolado), fill = substrato)) +
geom_col() +
labs(
title = paste("Atividade da enzima:", nome_completo),
x = "M√©dia da atividade",
y = "Isolado",
fill = "Substrato"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(grafico)
}
# Criar pasta de resultados
dir.create("resultados_todas_enzimas", showWarnings = FALSE)
# Dicion√°rio de nomes completos das enzimas
nomes_enzimas <- c(
bgli = "Œ≤-glicosidase",
xil = "Xilanase",
endog = "Endoglucanase",
lac = "Lacase",
fpa = "FPase",
bxil = "Œ≤-xilosidase",
mangper = "Mangan√™s Peroxidase"
)
# Loop por enzima
for (enz in enzimas) {
cat("\n===========================================\n")
cat("üî¨ Enzima:", enz, "\n")
subdados <- dados %>%
filter(enzima == enz) %>%
filter(!is.na(atividade), !is.nan(atividade), !is.infinite(atividade))
if (nlevels(droplevels(subdados$isolado)) < 2 |
nlevels(droplevels(subdados$substrato)) < 2) {
cat("‚ö†Ô∏è Pulado: 'isolado' ou 'substrato' com apenas um n√≠vel.\n")
next
}
# Estat√≠stica descritiva
desc <- subdados %>%
group_by(isolado, substrato) %>%
summarise(
n = n(),
media = mean(atividade, na.rm = TRUE),
desvio = sd(atividade, na.rm = TRUE),
mediana = median(atividade, na.rm = TRUE),
.groups = "drop"
)
# Teste de normalidade (A-D)
normalidade <- subdados %>%
group_by(isolado, substrato) %>%
filter(n() >= 5) %>%
summarise(ad_p = tryCatch(nortest::ad.test(atividade)$p.value, error = function(e) NA_real_),
.groups = "drop")
cat("üß™ Grupos com n‚â•5 testados para normalidade:", nrow(normalidade), "\n")
# Teste de Levene
levene <- levene_test(subdados, atividade ~ isolado * substrato)
cat("üìä Levene p =", formatC(levene$p, digits = 3), ifelse(levene$p < 0.05, "‚Üí vari√¢ncias diferentes ‚ö†Ô∏è", "‚Üí vari√¢ncias homog√™neas ‚úîÔ∏è"), "\n")
# Verifica√ß√£o de dados antes da ANOVA
grupos_com_mais_de_um <- subdados %>%
group_by(isolado, substrato) %>%
summarise(n = n(), .groups = "drop") %>%
filter(n > 1)
variancia_zero <- subdados %>%
group_by(isolado, substrato) %>%
summarise(sd = sd(atividade, na.rm = TRUE), .groups = "drop") %>%
filter(sd == 0 | is.na(sd))
if (nrow(grupos_com_mais_de_um) == 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: apenas 1 valor por grupo (isolado + substrato).\n")
anova_result <- data.frame()
tukey <- NULL
} else if (nrow(variancia_zero) > 0) {
cat("‚ö†Ô∏è ANOVA n√£o realizada: vari√¢ncia nula em um ou mais grupos.\n")
anova_result <- data.frame()
tukey <- NULL
} else {
modelo <- suppressWarnings(aov(atividade ~ isolado * substrato, data = subdados))
anova_result <- summary(modelo)[[1]]
pvals <- anova_result[["Pr(>F)"]][1:3]
if (any(pvals < 0.05)) {
cat("üìà ANOVA: diferen√ßas significativas detectadas.\n")
tukey <- TukeyHSD(modelo)
} else {
cat("‚ûñ ANOVA: sem diferen√ßas significativas detectadas.\n")
tukey <- NULL
}
}
# Nome completo da enzima
nome_completo <- nomes_enzimas[[tolower(enz)]]
if (is.null(nome_completo)) nome_completo <- enz
# Gr√°fico: barras horizontais empilhadas
grafico <- subdados %>%
group_by(isolado, substrato) %>%
summarise(
media = mean(atividade, na.rm = TRUE),
.groups = "drop"
) %>%
ggplot(aes(x = media, y = forcats::fct_rev(isolado), fill = substrato)) +
geom_col() +
labs(
title = paste("Atividade da enzima:", nome_completo),
x = "M√©dia da atividade",
y = "Isolado",
fill = "Substrato"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "right"
)
print(grafico)
# Exportar resultados
write_csv(desc, file.path("resultados_todas_enzimas", paste0("desc_", enz, ".csv")))
write_csv(normalidade, file.path("resultados_todas_enzimas", paste0("normalidade_", enz, ".csv")))
write_csv(levene, file.path("resultados_todas_enzimas", paste0("levene_", enz, ".csv")))
if (nrow(anova_result) > 0) {
write_csv(as.data.frame(anova_result), file.path("resultados_todas_enzimas", paste0("anova_", enz, ".csv")))
}
if (!is.null(tukey)) {
for (fator in names(tukey)) {
tukey_df <- as.data.frame(tukey[[fator]])
tukey_df$Compara√ß√£o <- rownames(tukey_df)
write_csv(tukey_df, file.path("resultados_todas_enzimas", paste0("tukey_", enz, "_", fator, ".csv")))
}
}
# Salvar gr√°fico
ggsave(
filename = file.path("resultados_todas_enzimas", paste0("grafico_", enz, ".png")),
plot = grafico,
width = 10, height = 6
)
cat("‚úîÔ∏è Exporta√ß√µes completas para:", nome_completo, "\n")
Sys.sleep(1)
}
quarto preview
